name: CI/CD Pipeline

on:
  push:
    branches:
      - dev
      - test
      - prod

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker
        uses: docker/setup-buildx-action@v3

      - name: Export Mongo URI
        run: echo "MONGODB_URI=${{ secrets.MONGODB_URI }}" >> $GITHUB_ENV

      - name: Build and start services with Docker Compose
        run: docker compose -f compose.yaml up --build -d

      - name: Wait for backend to be healthy
        run: |
          echo "Waiting for backend container to be healthy..."
          for i in {1..30}; do
            STATUS=$(docker inspect --format='{{.State.Health.Status}}' toDoBackend)
            if [ "$STATUS" == "healthy" ]; then
              echo "Backend is healthy!"
              exit 0
            fi
            echo "Backend not ready yet, retrying..."
            sleep 5
          done
          echo "Backend did not become healthy in time."
          exit 1

      - name: Run Jest tests inside backend container
        run: docker exec toDoBackend npm test

      - name: Stop and remove containers
        if: always()
        run: docker compose -f compose.yaml down

  deploy-dev:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/dev'
    steps:
      - name: Deploy to Dev Server
        run: echo "Deploying to DEV server..."

  deploy-test:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/test'
    steps:
      - name: Deploy to Test Server
        run: echo "Deploying to TEST server..."

  deploy-prod:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/prod'
    steps:
      - name: Deploy to Production Server
        run: echo "Deploying to PROD server..."
