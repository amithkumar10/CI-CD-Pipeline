name: CI/CD Pipeline

permissions:
  packages: write
  contents: read

on:
  pull_request:
    branches:
      - dev
      - test
  push:
    branches:
      - test

jobs:
  build-and-test:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker
        uses: docker/setup-buildx-action@v3

      - name: Build and start services with Docker Compose
        run: docker compose -f compose.yaml up --build -d
        env:
          MONGODB_URI: ${{ secrets.MONGODB_URI }}

      - name: Wait for backend to be ready
        run: sleep 10

      - name: Run Jest tests inside backend container
        run: docker exec toDoBackend npm test

      - name: Stop and remove containers
        if: always()
        run: docker compose -f compose.yaml down

  publish-to-ghcr:
    if: github.event_name == 'push' && github.ref == 'refs/heads/test'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image to GHCR
        run: |
              IMAGE=ghcr.io/${{ github.repository_owner }}/todo-app-backend
              docker build -t $IMAGE:${{ github.run_number }} -t $IMAGE:test-latest ./server
              docker push $IMAGE:${{ github.run_number }}
              docker push $IMAGE:test-latest


  create-test-vm:
    if: github.event_name == 'push' && github.ref == 'refs/heads/test'
    runs-on: ubuntu-latest
    needs: publish-to-ghcr
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        run: terraform init -backend-config="resource_group_name=${{ secrets.TF_STATE_RG }}" -backend-config="storage_account_name=${{ secrets.TF_STATE_STORAGE }}" -backend-config="container_name=${{ secrets.TF_STATE_CONTAINER }}" -backend-config="key=${{ secrets.TF_STATE_KEY }}"
        working-directory: infra/test-vm
        env:
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}


      - name: Terraform Apply
        run: terraform apply -auto-approve -var="ssh_public_key=${{ secrets.SSH_PUBLIC_KEY }}" -var="location=Central India"
        working-directory: infra/test-vm
        env:
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}